{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","props","timer","state","date","Date","toLocaleTimeString","this","window","setInterval","setState","console","log","clearInterval","React","Component","App","isClockVisible","clockName","hideClock","showClock","setRandomName","currentName","randomName","Math","ceil","random","className","name","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,kDAGE,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAHRC,WAE0B,IAM1BC,MAAe,CACbC,MAAM,IAAIC,MAAOC,sBAJjB,EAAKJ,MAAQ,EAHW,EAH5B,qDAaE,WAAqB,IAAD,OAClBK,KAAKL,MAAQM,OAAOC,aAAY,WAC9B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAlBP,kCAqBE,WACES,cAAcN,KAAKL,SAtBvB,oBAyBE,WACE,OACE,8BACGK,KAAKJ,MAAMC,WA5BpB,GAA2BU,IAAMC,WCiElBC,G,kNAjEbb,MAAQ,CACNc,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKT,SAAS,CACZO,gBAAgB,K,EAIpBG,UAAY,WACV,EAAKV,SAAS,CACZO,gBAAgB,K,EAIpBI,cAAgB,WACd,IAAMC,EAAc,EAAKnB,MAAMe,UAEzBK,EAAaC,KAAKC,KAAqB,IAAhBD,KAAKE,UAElC,EAAKhB,SAAS,CAAEQ,UAAWK,IAE3BZ,QAAQC,IAAR,qCAA0CU,EAA1C,eAA4DC,K,4CAG9D,WACE,OACE,sBAAKI,UAAU,MAAf,UACE,6CACA,6CAAcpB,KAAKJ,MAAMe,aACzB,oBAAGS,UAAU,YAAb,0BAEG,IACApB,KAAKJ,MAAMc,gBACV,cAAC,EAAD,CAAOW,KAAMrB,KAAKJ,MAAMe,eAG5B,wBACEW,KAAK,SACLF,UAAU,SACVG,QAASvB,KAAKa,UAHhB,wBAOA,wBACES,KAAK,SACLF,UAAU,SACVG,QAASvB,KAAKY,UAHhB,wBAOA,wBACEU,KAAK,SACLF,UAAU,SACVG,QAASvB,KAAKc,cAHhB,oC,GAtDUP,IAAMC,YCNxBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a1815b41.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timer: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.timer = 0;\n  }\n\n  state: State = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timer = window.setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.date}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  setRandomName = () => {\n    const currentName = this.state.clockName;\n\n    const randomName = Math.ceil(Math.random() * 100);\n\n    this.setState({ clockName: randomName });\n    // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${currentName} to ${randomName}`);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <h2>{`Name: ${this.state.clockName}`}</h2>\n        <p className=\"paragraph\">\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (\n            <Clock name={this.state.clockName} />\n          )}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}